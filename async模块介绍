asyncio模块是python3.4 版本引入的标准库，直接内置了对异步IO的支持
编辑模式：是有一个消息循环，我们从asyncio模块中直接获取一个Eventloop的引用，然后把需要执行
的协程扔到EventLoop中执行，就实现了异步
说明：到目前为止实现协程的不仅只有asyncio，还有gevent和tornado都实现了类似的功能
关键字说明：
1.event_loop 事件循环：程序开启一个无限循环，把一些函数注册到事件循环中，当满足条件发生时，
会调用相应的协程函数。
2.coroutine 协程：协程对象，指一个使用了async关键字定义的函数，调用不会立即执行函数，而是会返回协程对象，
协程对象需要注册到事件循环中，由事件循环调用。
3.task 任务：一个协程对象就是一个原生可以挂起的函数，任务则是对协程进一步的封装，其中包含了任务的各种状态
4.future：代表将来执行或者没有执行的任务的结果，它和task上没有本质上区别，类似回调
5.async/await:python3.5用于定义协程的关键字，async定义一个协程，await用于挂起阻塞异步调用接口
